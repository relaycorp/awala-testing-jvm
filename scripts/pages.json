[{"name":"abstract class MockMethodCall<CallArguments, CallResult>","description":"tech.relaycorp.relaynet.testing.pdc.MockMethodCall","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-method-call/index.html","searchKeys":["MockMethodCall","abstract class MockMethodCall<CallArguments, CallResult>","tech.relaycorp.relaynet.testing.pdc.MockMethodCall"]},{"name":"class CollectParcelsCall(result: Result<Flow<ParcelCollection>>) : MockMethodCall<CollectParcelsArgs, Flow<ParcelCollection>> ","description":"tech.relaycorp.relaynet.testing.pdc.CollectParcelsCall","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-collect-parcels-call/index.html","searchKeys":["CollectParcelsCall","class CollectParcelsCall(result: Result<Flow<ParcelCollection>>) : MockMethodCall<CollectParcelsArgs, Flow<ParcelCollection>> ","tech.relaycorp.relaynet.testing.pdc.CollectParcelsCall"]},{"name":"class DeliverParcelCall(throwable: Throwable? = null) : MockMethodCall<DeliverParcelArgs, Unit> ","description":"tech.relaycorp.relaynet.testing.pdc.DeliverParcelCall","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-deliver-parcel-call/index.html","searchKeys":["DeliverParcelCall","class DeliverParcelCall(throwable: Throwable? = null) : MockMethodCall<DeliverParcelArgs, Unit> ","tech.relaycorp.relaynet.testing.pdc.DeliverParcelCall"]},{"name":"class MockCertificateStore(savingException: Throwable? = null, retrievalException: Throwable? = null, deleteException: Throwable? = null) : CertificateStore","description":"tech.relaycorp.relaynet.testing.keystores.MockCertificateStore","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-certificate-store/index.html","searchKeys":["MockCertificateStore","class MockCertificateStore(savingException: Throwable? = null, retrievalException: Throwable? = null, deleteException: Throwable? = null) : CertificateStore","tech.relaycorp.relaynet.testing.keystores.MockCertificateStore"]},{"name":"class MockPDCClient(calls: MockMethodCall<*, *>) : PDCClient","description":"tech.relaycorp.relaynet.testing.pdc.MockPDCClient","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-p-d-c-client/index.html","searchKeys":["MockPDCClient","class MockPDCClient(calls: MockMethodCall<*, *>) : PDCClient","tech.relaycorp.relaynet.testing.pdc.MockPDCClient"]},{"name":"class MockPrivateKeyStore(savingException: Throwable? = null, retrievalException: Throwable? = null) : PrivateKeyStore","description":"tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-private-key-store/index.html","searchKeys":["MockPrivateKeyStore","class MockPrivateKeyStore(savingException: Throwable? = null, retrievalException: Throwable? = null) : PrivateKeyStore","tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore"]},{"name":"class MockSessionPublicKeyStore(savingException: Throwable? = null, retrievalException: Throwable? = null) : SessionPublicKeyStore","description":"tech.relaycorp.relaynet.testing.keystores.MockSessionPublicKeyStore","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-session-public-key-store/index.html","searchKeys":["MockSessionPublicKeyStore","class MockSessionPublicKeyStore(savingException: Throwable? = null, retrievalException: Throwable? = null) : SessionPublicKeyStore","tech.relaycorp.relaynet.testing.keystores.MockSessionPublicKeyStore"]},{"name":"class PreRegisterNodeCall(result: Result<PrivateNodeRegistrationRequest>) : MockMethodCall<PreRegisterNodeArgs, PrivateNodeRegistrationRequest> ","description":"tech.relaycorp.relaynet.testing.pdc.PreRegisterNodeCall","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-pre-register-node-call/index.html","searchKeys":["PreRegisterNodeCall","class PreRegisterNodeCall(result: Result<PrivateNodeRegistrationRequest>) : MockMethodCall<PreRegisterNodeArgs, PrivateNodeRegistrationRequest> ","tech.relaycorp.relaynet.testing.pdc.PreRegisterNodeCall"]},{"name":"class RegisterNodeCall(result: Result<PrivateNodeRegistration>) : MockMethodCall<RegisterNodeArgs, PrivateNodeRegistration> ","description":"tech.relaycorp.relaynet.testing.pdc.RegisterNodeCall","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-register-node-call/index.html","searchKeys":["RegisterNodeCall","class RegisterNodeCall(result: Result<PrivateNodeRegistration>) : MockMethodCall<RegisterNodeArgs, PrivateNodeRegistration> ","tech.relaycorp.relaynet.testing.pdc.RegisterNodeCall"]},{"name":"constructor(nodePublicKey: PublicKey)","description":"tech.relaycorp.relaynet.testing.pdc.PreRegisterNodeArgs.PreRegisterNodeArgs","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-pre-register-node-args/-pre-register-node-args.html","searchKeys":["PreRegisterNodeArgs","constructor(nodePublicKey: PublicKey)","tech.relaycorp.relaynet.testing.pdc.PreRegisterNodeArgs.PreRegisterNodeArgs"]},{"name":"constructor(nonceSigners: List<Signer>, streamingMode: StreamingMode?)","description":"tech.relaycorp.relaynet.testing.pdc.CollectParcelsArgs.CollectParcelsArgs","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-collect-parcels-args/-collect-parcels-args.html","searchKeys":["CollectParcelsArgs","constructor(nonceSigners: List<Signer>, streamingMode: StreamingMode?)","tech.relaycorp.relaynet.testing.pdc.CollectParcelsArgs.CollectParcelsArgs"]},{"name":"constructor(parcelSerialized: ByteArray, deliverySigner: Signer)","description":"tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs.DeliverParcelArgs","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-deliver-parcel-args/-deliver-parcel-args.html","searchKeys":["DeliverParcelArgs","constructor(parcelSerialized: ByteArray, deliverySigner: Signer)","tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs.DeliverParcelArgs"]},{"name":"constructor(pnrrSerialized: ByteArray)","description":"tech.relaycorp.relaynet.testing.pdc.RegisterNodeArgs.RegisterNodeArgs","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-register-node-args/-register-node-args.html","searchKeys":["RegisterNodeArgs","constructor(pnrrSerialized: ByteArray)","tech.relaycorp.relaynet.testing.pdc.RegisterNodeArgs.RegisterNodeArgs"]},{"name":"constructor(result: Result<Flow<ParcelCollection>>)","description":"tech.relaycorp.relaynet.testing.pdc.CollectParcelsCall.CollectParcelsCall","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-collect-parcels-call/-collect-parcels-call.html","searchKeys":["CollectParcelsCall","constructor(result: Result<Flow<ParcelCollection>>)","tech.relaycorp.relaynet.testing.pdc.CollectParcelsCall.CollectParcelsCall"]},{"name":"constructor(result: Result<PrivateNodeRegistration>)","description":"tech.relaycorp.relaynet.testing.pdc.RegisterNodeCall.RegisterNodeCall","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-register-node-call/-register-node-call.html","searchKeys":["RegisterNodeCall","constructor(result: Result<PrivateNodeRegistration>)","tech.relaycorp.relaynet.testing.pdc.RegisterNodeCall.RegisterNodeCall"]},{"name":"constructor(result: Result<PrivateNodeRegistrationRequest>)","description":"tech.relaycorp.relaynet.testing.pdc.PreRegisterNodeCall.PreRegisterNodeCall","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-pre-register-node-call/-pre-register-node-call.html","searchKeys":["PreRegisterNodeCall","constructor(result: Result<PrivateNodeRegistrationRequest>)","tech.relaycorp.relaynet.testing.pdc.PreRegisterNodeCall.PreRegisterNodeCall"]},{"name":"constructor(savingException: Throwable? = null, retrievalException: Throwable? = null)","description":"tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.MockPrivateKeyStore","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-private-key-store/-mock-private-key-store.html","searchKeys":["MockPrivateKeyStore","constructor(savingException: Throwable? = null, retrievalException: Throwable? = null)","tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.MockPrivateKeyStore"]},{"name":"constructor(savingException: Throwable? = null, retrievalException: Throwable? = null)","description":"tech.relaycorp.relaynet.testing.keystores.MockSessionPublicKeyStore.MockSessionPublicKeyStore","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-session-public-key-store/-mock-session-public-key-store.html","searchKeys":["MockSessionPublicKeyStore","constructor(savingException: Throwable? = null, retrievalException: Throwable? = null)","tech.relaycorp.relaynet.testing.keystores.MockSessionPublicKeyStore.MockSessionPublicKeyStore"]},{"name":"constructor(savingException: Throwable? = null, retrievalException: Throwable? = null, deleteException: Throwable? = null)","description":"tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.MockCertificateStore","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-certificate-store/-mock-certificate-store.html","searchKeys":["MockCertificateStore","constructor(savingException: Throwable? = null, retrievalException: Throwable? = null, deleteException: Throwable? = null)","tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.MockCertificateStore"]},{"name":"constructor(throwable: Throwable? = null)","description":"tech.relaycorp.relaynet.testing.pdc.DeliverParcelCall.DeliverParcelCall","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-deliver-parcel-call/-deliver-parcel-call.html","searchKeys":["DeliverParcelCall","constructor(throwable: Throwable? = null)","tech.relaycorp.relaynet.testing.pdc.DeliverParcelCall.DeliverParcelCall"]},{"name":"constructor(vararg calls: MockMethodCall<*, *>)","description":"tech.relaycorp.relaynet.testing.pdc.MockPDCClient.MockPDCClient","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-p-d-c-client/-mock-p-d-c-client.html","searchKeys":["MockPDCClient","constructor(vararg calls: MockMethodCall<*, *>)","tech.relaycorp.relaynet.testing.pdc.MockPDCClient.MockPDCClient"]},{"name":"data class CollectParcelsArgs(val nonceSigners: List<Signer>, val streamingMode: StreamingMode?)","description":"tech.relaycorp.relaynet.testing.pdc.CollectParcelsArgs","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-collect-parcels-args/index.html","searchKeys":["CollectParcelsArgs","data class CollectParcelsArgs(val nonceSigners: List<Signer>, val streamingMode: StreamingMode?)","tech.relaycorp.relaynet.testing.pdc.CollectParcelsArgs"]},{"name":"data class DeliverParcelArgs(val parcelSerialized: ByteArray, val deliverySigner: Signer)","description":"tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-deliver-parcel-args/index.html","searchKeys":["DeliverParcelArgs","data class DeliverParcelArgs(val parcelSerialized: ByteArray, val deliverySigner: Signer)","tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs"]},{"name":"data class PreRegisterNodeArgs(val nodePublicKey: PublicKey)","description":"tech.relaycorp.relaynet.testing.pdc.PreRegisterNodeArgs","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-pre-register-node-args/index.html","searchKeys":["PreRegisterNodeArgs","data class PreRegisterNodeArgs(val nodePublicKey: PublicKey)","tech.relaycorp.relaynet.testing.pdc.PreRegisterNodeArgs"]},{"name":"data class RegisterNodeArgs(val pnrrSerialized: ByteArray)","description":"tech.relaycorp.relaynet.testing.pdc.RegisterNodeArgs","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-register-node-args/index.html","searchKeys":["RegisterNodeArgs","data class RegisterNodeArgs(val pnrrSerialized: ByteArray)","tech.relaycorp.relaynet.testing.pdc.RegisterNodeArgs"]},{"name":"fun clear()","description":"tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.clear","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-certificate-store/clear.html","searchKeys":["clear","fun clear()","tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.clear"]},{"name":"fun clear()","description":"tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.clear","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-private-key-store/clear.html","searchKeys":["clear","fun clear()","tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.clear"]},{"name":"fun clear()","description":"tech.relaycorp.relaynet.testing.keystores.MockSessionPublicKeyStore.clear","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-session-public-key-store/clear.html","searchKeys":["clear","fun clear()","tech.relaycorp.relaynet.testing.keystores.MockSessionPublicKeyStore.clear"]},{"name":"fun setCertificate(subjectId: String, leafCertificateExpiryDate: ZonedDateTime, certificationPathData: ByteArray, issuerId: String)","description":"tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.setCertificate","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-certificate-store/set-certificate.html","searchKeys":["setCertificate","fun setCertificate(subjectId: String, leafCertificateExpiryDate: ZonedDateTime, certificationPathData: ByteArray, issuerId: String)","tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.setCertificate"]},{"name":"fun setIdentityKey(privateAddress: String, keyData: PrivateKeyData)","description":"tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.setIdentityKey","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-private-key-store/set-identity-key.html","searchKeys":["setIdentityKey","fun setIdentityKey(privateAddress: String, keyData: PrivateKeyData)","tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.setIdentityKey"]},{"name":"fun setSessionKey(privateAddress: String, peerId: String?, keyId: String, keySerialized: ByteArray)","description":"tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.setSessionKey","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-private-key-store/set-session-key.html","searchKeys":["setSessionKey","fun setSessionKey(privateAddress: String, peerId: String?, keyId: String, keySerialized: ByteArray)","tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.setSessionKey"]},{"name":"object CDACertPath","description":"tech.relaycorp.relaynet.testing.pki.CDACertPath","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-c-d-a-cert-path/index.html","searchKeys":["CDACertPath","object CDACertPath","tech.relaycorp.relaynet.testing.pki.CDACertPath"]},{"name":"object KeyPairSet","description":"tech.relaycorp.relaynet.testing.pki.KeyPairSet","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-key-pair-set/index.html","searchKeys":["KeyPairSet","object KeyPairSet","tech.relaycorp.relaynet.testing.pki.KeyPairSet"]},{"name":"object PDACertPath","description":"tech.relaycorp.relaynet.testing.pki.PDACertPath","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-p-d-a-cert-path/index.html","searchKeys":["PDACertPath","object PDACertPath","tech.relaycorp.relaynet.testing.pki.PDACertPath"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs.equals","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-deliver-parcel-args/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"tech.relaycorp.relaynet.testing.pdc.RegisterNodeArgs.equals","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-register-node-args/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","tech.relaycorp.relaynet.testing.pdc.RegisterNodeArgs.equals"]},{"name":"open override fun close()","description":"tech.relaycorp.relaynet.testing.pdc.MockPDCClient.close","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-p-d-c-client/close.html","searchKeys":["close","open override fun close()","tech.relaycorp.relaynet.testing.pdc.MockPDCClient.close"]},{"name":"open override fun delete(subjectId: String, issuerId: String)","description":"tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.delete","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-certificate-store/delete.html","searchKeys":["delete","open override fun delete(subjectId: String, issuerId: String)","tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.delete"]},{"name":"open override fun hashCode(): Int","description":"tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs.hashCode","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-deliver-parcel-args/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs.hashCode"]},{"name":"open override fun hashCode(): Int","description":"tech.relaycorp.relaynet.testing.pdc.RegisterNodeArgs.hashCode","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-register-node-args/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","tech.relaycorp.relaynet.testing.pdc.RegisterNodeArgs.hashCode"]},{"name":"open suspend override fun collectParcels(nonceSigners: Array<Signer>, streamingMode: StreamingMode): Flow<ParcelCollection>","description":"tech.relaycorp.relaynet.testing.pdc.MockPDCClient.collectParcels","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-p-d-c-client/collect-parcels.html","searchKeys":["collectParcels","open suspend override fun collectParcels(nonceSigners: Array<Signer>, streamingMode: StreamingMode): Flow<ParcelCollection>","tech.relaycorp.relaynet.testing.pdc.MockPDCClient.collectParcels"]},{"name":"open suspend override fun delete(peerId: String)","description":"tech.relaycorp.relaynet.testing.keystores.MockSessionPublicKeyStore.delete","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-session-public-key-store/delete.html","searchKeys":["delete","open suspend override fun delete(peerId: String)","tech.relaycorp.relaynet.testing.keystores.MockSessionPublicKeyStore.delete"]},{"name":"open suspend override fun deleteExpired()","description":"tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.deleteExpired","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-certificate-store/delete-expired.html","searchKeys":["deleteExpired","open suspend override fun deleteExpired()","tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.deleteExpired"]},{"name":"open suspend override fun deleteKeys(nodeId: String)","description":"tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.deleteKeys","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-private-key-store/delete-keys.html","searchKeys":["deleteKeys","open suspend override fun deleteKeys(nodeId: String)","tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.deleteKeys"]},{"name":"open suspend override fun deleteSessionKeysForPeer(peerId: String)","description":"tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.deleteSessionKeysForPeer","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-private-key-store/delete-session-keys-for-peer.html","searchKeys":["deleteSessionKeysForPeer","open suspend override fun deleteSessionKeysForPeer(peerId: String)","tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.deleteSessionKeysForPeer"]},{"name":"open suspend override fun deliverParcel(parcelSerialized: ByteArray, deliverySigner: Signer)","description":"tech.relaycorp.relaynet.testing.pdc.MockPDCClient.deliverParcel","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-p-d-c-client/deliver-parcel.html","searchKeys":["deliverParcel","open suspend override fun deliverParcel(parcelSerialized: ByteArray, deliverySigner: Signer)","tech.relaycorp.relaynet.testing.pdc.MockPDCClient.deliverParcel"]},{"name":"open suspend override fun preRegisterNode(nodePublicKey: PublicKey): PrivateNodeRegistrationRequest","description":"tech.relaycorp.relaynet.testing.pdc.MockPDCClient.preRegisterNode","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-p-d-c-client/pre-register-node.html","searchKeys":["preRegisterNode","open suspend override fun preRegisterNode(nodePublicKey: PublicKey): PrivateNodeRegistrationRequest","tech.relaycorp.relaynet.testing.pdc.MockPDCClient.preRegisterNode"]},{"name":"open suspend override fun registerNode(pnrrSerialized: ByteArray): PrivateNodeRegistration","description":"tech.relaycorp.relaynet.testing.pdc.MockPDCClient.registerNode","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-p-d-c-client/register-node.html","searchKeys":["registerNode","open suspend override fun registerNode(pnrrSerialized: ByteArray): PrivateNodeRegistration","tech.relaycorp.relaynet.testing.pdc.MockPDCClient.registerNode"]},{"name":"val INTERNET_GW: Certificate","description":"tech.relaycorp.relaynet.testing.pki.CDACertPath.INTERNET_GW","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-c-d-a-cert-path/-i-n-t-e-r-n-e-t_-g-w.html","searchKeys":["INTERNET_GW","val INTERNET_GW: Certificate","tech.relaycorp.relaynet.testing.pki.CDACertPath.INTERNET_GW"]},{"name":"val INTERNET_GW: Certificate","description":"tech.relaycorp.relaynet.testing.pki.PDACertPath.INTERNET_GW","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-p-d-a-cert-path/-i-n-t-e-r-n-e-t_-g-w.html","searchKeys":["INTERNET_GW","val INTERNET_GW: Certificate","tech.relaycorp.relaynet.testing.pki.PDACertPath.INTERNET_GW"]},{"name":"val INTERNET_GW: KeyPair","description":"tech.relaycorp.relaynet.testing.pki.KeyPairSet.INTERNET_GW","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-key-pair-set/-i-n-t-e-r-n-e-t_-g-w.html","searchKeys":["INTERNET_GW","val INTERNET_GW: KeyPair","tech.relaycorp.relaynet.testing.pki.KeyPairSet.INTERNET_GW"]},{"name":"val PDA: Certificate","description":"tech.relaycorp.relaynet.testing.pki.PDACertPath.PDA","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-p-d-a-cert-path/-p-d-a.html","searchKeys":["PDA","val PDA: Certificate","tech.relaycorp.relaynet.testing.pki.PDACertPath.PDA"]},{"name":"val PDA_GRANTEE: KeyPair","description":"tech.relaycorp.relaynet.testing.pki.KeyPairSet.PDA_GRANTEE","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-key-pair-set/-p-d-a_-g-r-a-n-t-e-e.html","searchKeys":["PDA_GRANTEE","val PDA_GRANTEE: KeyPair","tech.relaycorp.relaynet.testing.pki.KeyPairSet.PDA_GRANTEE"]},{"name":"val PRIVATE_ENDPOINT: Certificate","description":"tech.relaycorp.relaynet.testing.pki.PDACertPath.PRIVATE_ENDPOINT","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-p-d-a-cert-path/-p-r-i-v-a-t-e_-e-n-d-p-o-i-n-t.html","searchKeys":["PRIVATE_ENDPOINT","val PRIVATE_ENDPOINT: Certificate","tech.relaycorp.relaynet.testing.pki.PDACertPath.PRIVATE_ENDPOINT"]},{"name":"val PRIVATE_ENDPOINT: KeyPair","description":"tech.relaycorp.relaynet.testing.pki.KeyPairSet.PRIVATE_ENDPOINT","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-key-pair-set/-p-r-i-v-a-t-e_-e-n-d-p-o-i-n-t.html","searchKeys":["PRIVATE_ENDPOINT","val PRIVATE_ENDPOINT: KeyPair","tech.relaycorp.relaynet.testing.pki.KeyPairSet.PRIVATE_ENDPOINT"]},{"name":"val PRIVATE_GW: Certificate","description":"tech.relaycorp.relaynet.testing.pki.CDACertPath.PRIVATE_GW","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-c-d-a-cert-path/-p-r-i-v-a-t-e_-g-w.html","searchKeys":["PRIVATE_GW","val PRIVATE_GW: Certificate","tech.relaycorp.relaynet.testing.pki.CDACertPath.PRIVATE_GW"]},{"name":"val PRIVATE_GW: Certificate","description":"tech.relaycorp.relaynet.testing.pki.PDACertPath.PRIVATE_GW","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-p-d-a-cert-path/-p-r-i-v-a-t-e_-g-w.html","searchKeys":["PRIVATE_GW","val PRIVATE_GW: Certificate","tech.relaycorp.relaynet.testing.pki.PDACertPath.PRIVATE_GW"]},{"name":"val PRIVATE_GW: KeyPair","description":"tech.relaycorp.relaynet.testing.pki.KeyPairSet.PRIVATE_GW","location":"awala-testing/tech.relaycorp.relaynet.testing.pki/-key-pair-set/-p-r-i-v-a-t-e_-g-w.html","searchKeys":["PRIVATE_GW","val PRIVATE_GW: KeyPair","tech.relaycorp.relaynet.testing.pki.KeyPairSet.PRIVATE_GW"]},{"name":"val certificationPaths: MutableMap<Pair<String, String>, List<Pair<ZonedDateTime, ByteArray>>>","description":"tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.certificationPaths","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-certificate-store/certification-paths.html","searchKeys":["certificationPaths","val certificationPaths: MutableMap<Pair<String, String>, List<Pair<ZonedDateTime, ByteArray>>>","tech.relaycorp.relaynet.testing.keystores.MockCertificateStore.certificationPaths"]},{"name":"val deliverySigner: Signer","description":"tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs.deliverySigner","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-deliver-parcel-args/delivery-signer.html","searchKeys":["deliverySigner","val deliverySigner: Signer","tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs.deliverySigner"]},{"name":"val identityKeys: MutableMap<String, PrivateKeyData>","description":"tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.identityKeys","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-private-key-store/identity-keys.html","searchKeys":["identityKeys","val identityKeys: MutableMap<String, PrivateKeyData>","tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.identityKeys"]},{"name":"val keys: MutableMap<String, SessionPublicKeyData>","description":"tech.relaycorp.relaynet.testing.keystores.MockSessionPublicKeyStore.keys","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-session-public-key-store/keys.html","searchKeys":["keys","val keys: MutableMap<String, SessionPublicKeyData>","tech.relaycorp.relaynet.testing.keystores.MockSessionPublicKeyStore.keys"]},{"name":"val nodePublicKey: PublicKey","description":"tech.relaycorp.relaynet.testing.pdc.PreRegisterNodeArgs.nodePublicKey","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-pre-register-node-args/node-public-key.html","searchKeys":["nodePublicKey","val nodePublicKey: PublicKey","tech.relaycorp.relaynet.testing.pdc.PreRegisterNodeArgs.nodePublicKey"]},{"name":"val nonceSigners: List<Signer>","description":"tech.relaycorp.relaynet.testing.pdc.CollectParcelsArgs.nonceSigners","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-collect-parcels-args/nonce-signers.html","searchKeys":["nonceSigners","val nonceSigners: List<Signer>","tech.relaycorp.relaynet.testing.pdc.CollectParcelsArgs.nonceSigners"]},{"name":"val parcelSerialized: ByteArray","description":"tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs.parcelSerialized","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-deliver-parcel-args/parcel-serialized.html","searchKeys":["parcelSerialized","val parcelSerialized: ByteArray","tech.relaycorp.relaynet.testing.pdc.DeliverParcelArgs.parcelSerialized"]},{"name":"val pnrrSerialized: ByteArray","description":"tech.relaycorp.relaynet.testing.pdc.RegisterNodeArgs.pnrrSerialized","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-register-node-args/pnrr-serialized.html","searchKeys":["pnrrSerialized","val pnrrSerialized: ByteArray","tech.relaycorp.relaynet.testing.pdc.RegisterNodeArgs.pnrrSerialized"]},{"name":"val sessionKeys: MutableMap<String, MutableMap<String, MutableMap<String, ByteArray>>>","description":"tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.sessionKeys","location":"awala-testing/tech.relaycorp.relaynet.testing.keystores/-mock-private-key-store/session-keys.html","searchKeys":["sessionKeys","val sessionKeys: MutableMap<String, MutableMap<String, MutableMap<String, ByteArray>>>","tech.relaycorp.relaynet.testing.keystores.MockPrivateKeyStore.sessionKeys"]},{"name":"val streamingMode: StreamingMode?","description":"tech.relaycorp.relaynet.testing.pdc.CollectParcelsArgs.streamingMode","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-collect-parcels-args/streaming-mode.html","searchKeys":["streamingMode","val streamingMode: StreamingMode?","tech.relaycorp.relaynet.testing.pdc.CollectParcelsArgs.streamingMode"]},{"name":"var arguments: CallArguments?","description":"tech.relaycorp.relaynet.testing.pdc.MockMethodCall.arguments","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-method-call/arguments.html","searchKeys":["arguments","var arguments: CallArguments?","tech.relaycorp.relaynet.testing.pdc.MockMethodCall.arguments"]},{"name":"var wasCalled: Boolean","description":"tech.relaycorp.relaynet.testing.pdc.MockMethodCall.wasCalled","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-method-call/was-called.html","searchKeys":["wasCalled","var wasCalled: Boolean","tech.relaycorp.relaynet.testing.pdc.MockMethodCall.wasCalled"]},{"name":"var wasClosed: Boolean","description":"tech.relaycorp.relaynet.testing.pdc.MockPDCClient.wasClosed","location":"awala-testing/tech.relaycorp.relaynet.testing.pdc/-mock-p-d-c-client/was-closed.html","searchKeys":["wasClosed","var wasClosed: Boolean","tech.relaycorp.relaynet.testing.pdc.MockPDCClient.wasClosed"]}]
